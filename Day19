scanners = []

for i in range(40):
    input()
    points = set()
    s = input()
    while s:
        x, y, z = map(int, s.split(","))
        points.add((x,y,z))
        s = input()
    scanners.append(points)
main_scanner, scanners = scanners[0], scanners[1:]
main_scanner_list = list(main_scanner)
scanners = [(i, 0) for i in scanners]

trs = []
for i in range(3):
    for j in range(3):
        for k in range(3):
            if any([m not in (i,j,k) for m in range(3)]):
                continue
            ijk = [i,j,k]
            count = 1
            if ijk[0] > ijk[1]:
                ijk[0], ijk[1], count = ijk[1], ijk[0], -count
            if ijk[1] > ijk[2]:
                ijk[1], ijk[2], count = ijk[2], ijk[1], -count
            if ijk[0] > ijk[1]:
                ijk[0], ijk[1], count = ijk[1], ijk[0], -count
            for sx in (-1,1):
                for sy in (-1,1):
                    trs.append([(i,sx), (j,sy), (k,sx*sy*count)])

def transform(way, j):
    return [j[way[0][0]] * way[0][1], j[way[1][0]] * way[1][1], j[way[2][0]] * way[2][1]]

def sub_tri(x, y):
    return (x[0]-y[0], x[1]-y[1], x[2]-y[2])

dis = []
def try_merge():
    scanner, index = scanners[0]
    for j in list(scanner)[:-11]:
        for i in main_scanner_list[index:]:
            for way in trs:
                diff = sub_tri(transform(way, j), i)
                count = 0
                for ii in scanner:
                    newj = sub_tri(transform(way, ii), diff)
                    if newj in main_scanner:
                        count += 1
                    if count >= 12:
                        for ii in scanner:
                            newj = sub_tri(transform(way, ii), diff)
                            if newj not in main_scanner:
                                main_scanner.add(newj)
                                main_scanner_list.append(newj)
                        del scanners[0]
                        dis.append(diff)
                        return True
    scanners[0] = (scanner, len(main_scanner_list))
    scanners.append(scanners.pop(0))


while scanners:
    try_merge()

print(len(main_scanner))
print(max([sum([abs(i[k]-j[k]) for k in range(3)]) for i in dis for j in dis]))
